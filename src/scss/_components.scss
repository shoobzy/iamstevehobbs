// A component (namespace: c-) is a small feature that makes up a part of the website. Think buttons, accordions, sliders,
// modal dialogs, etc. Each component is fully functional by itself and does not rely on any other components. This fact
// should be considered when you name the component.
//
// For example, the button in the main section from the example above shouldnâ€™t be called .c-main-button because main
// scopes it inside the main section and limits the use of it in other places, like a sidebar. Something like .c-btn
// is much nicer because the button is no longer tied to any other specific sections of the page.
//
// If you need any extra features, you can always extend properties with a BEM modifier (combining powers!) or use Scope,
// which is coming up in a bit.
.Hero {
    position: fixed;
    height: 100vh;
    width: 100%;
    z-index: 10;
}

.Hero--inner {
    display: flex;
    flex-direction: row;
}

.Hero--intro-graphic {
    display: flex;
    flex-flow: column;
    align-items: stretch;
    line-height: 0;
}

.Hero--intro-fill {
    display: flex;
    flex: 1;
    align-items: center;
    justify-content: center;
    background: #fff;
}

.Hero--intro-welcome {
    transform: translateY(1px);
}

.Hero--intro-scroll {
    height: 20px;
}

.intro {
    position: fixed;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
    width: 100%;
    background: #000;

    &.detached {
        position: absolute;
        margin-top: 100vh;
    }
}

.intro__inner {
    color: #fff;
}

.Translate--x--positive {
    transform: translateX(1px);
}

.Translate--x--negative {
    transform: translateX(-1px);
}
